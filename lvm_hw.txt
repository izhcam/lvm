Проверяем диски
[vagrant@lvm ~]$ lsblk
NAME                    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda                       8:0    0   40G  0 disk 
├─sda1                    8:1    0    1M  0 part 
├─sda2                    8:2    0    1G  0 part /boot
└─sda3                    8:3    0   39G  0 part 
  ├─VolGroup00-LogVol00 253:0    0 37.5G  0 lvm  /
  └─VolGroup00-LogVol01 253:1    0  1.5G  0 lvm  [SWAP]
sdb                       8:16   0   10G  0 disk 
sdc                       8:32   0    2G  0 disk 
sdd                       8:48   0    1G  0 disk 
sde                       8:64   0    1G  0 disk 

[vagrant@lvm ~]$ cat /etc/fstab

#
# /etc/fstab
# Created by anaconda on Sat May 12 18:50:26 2018
#
# Accessible filesystems, by reference, are maintained under '/dev/disk'
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
#
/dev/mapper/VolGroup00-LogVol00 /                       xfs     defaults        0 0
UUID=570897ca-e759-4c81-90cf-389da6eee4cc /boot                   xfs     defaults        0 0
/dev/mapper/VolGroup00-LogVol01 swap                    swap    defaults        0 0
#VAGRANT-BEGIN
# The contents below are automatically generated by Vagrant. Do not modify.
#VAGRANT-END


Создаем временный том
[vagrant@lvm ~]$ sudo pvcreate /dev/sdb
  Physical volume "/dev/sdb" successfully created.
[vagrant@lvm ~]$ sudo vgcreate root1 /dev/sdb
  Volume group "root1" successfully created
[vagrant@lvm ~]$ sudo lvcreate -n root1_lv -l +100%FREE /dev/root1
  Logical volume "root1_lv" created.

Создаем файловую систему
[vagrant@lvm ~]$ sudo mkfs.xfs /dev/root1/root1_lv
meta-data=/dev/root1/root1_lv    isize=512    agcount=4, agsize=655104 blks
         =                       sectsz=512   attr=2, projid32bit=1
         =                       crc=1        finobt=0, sparse=0
data     =                       bsize=4096   blocks=2620416, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0 ftype=1
log      =internal log           bsize=4096   blocks=2560, version=2
         =                       sectsz=512   sunit=0 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0

Монтируем
[vagrant@lvm ~]$ sudo mount /dev/root1/root1_lv /mnt

[vagrant@lvm ~]$ sudo yum install xfsdump

Переносим данные с / во временный том
[root@lvm vagrant]# xfsdump -J - /dev/VolGroup00/LogVol00 | xfsrestore -J - /mnt
xfsrestore: using file dump (drive_simple) strategy
xfsrestore: version 3.1.7 (dump format 3.0)
xfsdump: using file dump (drive_simple) strategy
xfsdump: version 3.1.7 (dump format 3.0)
xfsdump: level 0 dump of lvm:/
xfsdump: dump date: Sun May  2 03:18:33 2021
xfsdump: session id: 9bafb6f2-331a-41d0-b8bd-665896b55101
xfsdump: session label: ""
xfsdump: ino map phase 1: constructing initial dump list
xfsdump: ino map phase 2: skipping (no pruning necessary)
xfsdump: ino map phase 3: skipping (only one dump stream)
xfsdump: ino map construction complete
xfsdump: estimated dump size: 768456832 bytes
xfsdump: creating dump session media file 0 (media 0, file 0)
xfsdump: dumping ino map
xfsdump: dumping directories
xfsrestore: searching media for dump
xfsrestore: examining media file 0
xfsrestore: dump description: 
xfsrestore: hostname: lvm
xfsrestore: mount point: /
xfsrestore: volume: /dev/mapper/VolGroup00-LogVol00
xfsrestore: session time: Sun May  2 03:18:33 2021
xfsrestore: level: 0
xfsrestore: session label: ""
xfsrestore: media label: ""
xfsrestore: file system id: b60e9498-0baa-4d9f-90aa-069048217fee
xfsrestore: session id: 9bafb6f2-331a-41d0-b8bd-665896b55101
xfsrestore: media id: 3e972d92-5eae-44e7-a163-6d0dc65da701
xfsrestore: searching media for directory dump
xfsrestore: reading directories
xfsdump: dumping non-directory files
xfsrestore: 2699 directories and 23613 entries processed
xfsrestore: directory post-processing
xfsrestore: restoring non-directory files
xfsdump: ending media file
xfsdump: media file size 745447240 bytes
xfsdump: dump size (non-dir files) : 732283624 bytes
xfsdump: dump complete: 48 seconds elapsed
xfsdump: Dump Status: SUCCESS
xfsrestore: restore complete: 52 seconds elapsed
xfsrestore: Restore Status: SUCCESS


Подготовим окружение
[root@lvm vagrant]# for i in /proc/ /sys/ /dev/ /run/ /boot/; do mount --bind $i /mnt/$i; done

Меняем /root
[root@lvm vagrant]# chroot /mnt/
[root@lvm /]# 

Создаем новый конфиг grub2
[root@lvm /]# grub2-mkconfig -o /boot/grub2/grub.cfg
Generating grub configuration file ...
Found linux image: /boot/vmlinuz-3.10.0-862.2.3.el7.x86_64
Found initrd image: /boot/initramfs-3.10.0-862.2.3.el7.x86_64.img
done

Обновим образ initrd
cd /boot
for i in `ls initramfs-*img`; do dracut -v $i `echo $i|sed "s/initramfs-//g; s/.img//g"` --force;done

Правим конфиг grub (меняем rd.lvm.lv=VolGroup00/LogVol00 на rd.lvm.lv=root1/root1_lv)
[root@lvm boot]# vi /boot/grub2/grub.cfg
Правим точку монтирования root fstab (/dev/mapper/root1-root1_lv)
[root@lvm boot]# vi /etc/fstab

Выходим из chroot и перезагружаемся
[root@lvm boot]# exit
reboot


После загрузки проверяем диски
[vagrant@lvm ~]$ lsblk
NAME                    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda                       8:0    0   40G  0 disk 
├─sda1                    8:1    0    1M  0 part 
├─sda2                    8:2    0    1G  0 part /boot
└─sda3                    8:3    0   39G  0 part 
  ├─VolGroup00-LogVol01 253:1    0  1.5G  0 lvm  [SWAP]
  └─VolGroup00-LogVol00 253:2    0 37.5G  0 lvm  
sdb                       8:16   0   10G  0 disk 
└─root1-root1_lv        253:0    0   10G  0 lvm  /
sdc                       8:32   0    2G  0 disk 
sdd                       8:48   0    1G  0 disk 
sde                       8:64   0    1G  0 disk 

Удаляем оригинальный раздел
[root@lvm vagrant]# lvremove /dev/VolGroup00/LogVol00
Do you really want to remove active logical volume VolGroup00/LogVol00? [y/n]: y
  Logical volume "LogVol00" successfully removed
Создаем раздел на 8Гб
[root@lvm vagrant]# lvcreate -n VolGroup00/LogVol00 -L 8G /dev/VolGroup00
WARNING: xfs signature detected on /dev/VolGroup00/LogVol00 at offset 0. Wipe it? [y/n]: y
  Wiping xfs signature on /dev/VolGroup00/LogVol00.
  Logical volume "LogVol00" created.
Создаем файловую систему
[root@lvm vagrant]# mkfs.xfs /dev/VolGroup00/LogVol00
meta-data=/dev/VolGroup00/LogVol00 isize=512    agcount=4, agsize=524288 blks
         =                       sectsz=512   attr=2, projid32bit=1
         =                       crc=1        finobt=0, sparse=0
data     =                       bsize=4096   blocks=2097152, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0 ftype=1
log      =internal log           bsize=4096   blocks=2560, version=2
         =                       sectsz=512   sunit=0 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0

Монтируем во временный каталог и переносим данные
[root@lvm vagrant]# mount /dev/VolGroup00/LogVol00 /mnt
[root@lvm vagrant]# xfsdump -J - /dev/root1/root1_lv | xfsrestore -J - /mnt
xfsrestore: using file dump (drive_simple) strategy
xfsrestore: version 3.1.7 (dump format 3.0)
xfsdump: using file dump (drive_simple) strategy
xfsdump: version 3.1.7 (dump format 3.0)
xfsdump: level 0 dump of lvm:/
xfsdump: dump date: Sun May  2 04:34:36 2021
xfsdump: session id: ccd2c3a0-b221-4cb1-9c3d-50d1eb65deba
xfsdump: session label: ""
xfsrestore: searching media for dump
xfsdump: ino map phase 1: constructing initial dump list
xfsdump: ino map phase 2: skipping (no pruning necessary)
xfsdump: ino map phase 3: skipping (only one dump stream)
xfsdump: ino map construction complete
xfsdump: estimated dump size: 767016640 bytes
xfsdump: creating dump session media file 0 (media 0, file 0)
xfsdump: dumping ino map
xfsdump: dumping directories
xfsrestore: examining media file 0
xfsrestore: dump description: 
xfsrestore: hostname: lvm
xfsrestore: mount point: /
xfsrestore: volume: /dev/mapper/root1-root1_lv
xfsrestore: session time: Sun May  2 04:34:36 2021
xfsrestore: level: 0
xfsrestore: session label: ""
xfsrestore: media label: ""
xfsrestore: file system id: 7328308d-54c4-4909-aa17-580b6f18af73
xfsrestore: session id: ccd2c3a0-b221-4cb1-9c3d-50d1eb65deba
xfsrestore: media id: 0f982280-b558-414a-9678-b2447a7f1b91
xfsrestore: searching media for directory dump
xfsrestore: reading directories
xfsdump: dumping non-directory files
xfsrestore: 2703 directories and 23618 entries processed
xfsrestore: directory post-processing
xfsrestore: restoring non-directory files
xfsdump: ending media file
xfsdump: media file size 744050192 bytes
xfsdump: dump size (non-dir files) : 730882888 bytes
xfsdump: dump complete: 44 seconds elapsed
xfsdump: Dump Status: SUCCESS
xfsrestore: restore complete: 45 seconds elapsed
xfsrestore: Restore Status: SUCCESS

Готовим окружение
[root@lvm vagrant]# for i in /proc/ /sys/ /dev/ /run/ /boot/; do mount --bind $i /mnt/$i; done
[root@lvm vagrant]# chroot /mnt/

Создаем новый конфиг grub
[root@lvm /]# grub2-mkconfig -o /boot/grub2/grub.cfg
Generating grub configuration file ...
Found linux image: /boot/vmlinuz-3.10.0-862.2.3.el7.x86_64
Found initrd image: /boot/initramfs-3.10.0-862.2.3.el7.x86_64.img
done

Обновляем образ initrd
[root@lvm /]# cd /boot
[root@lvm boot]# for i in `ls initramfs-*img`; do dracut -v $i `echo $i|sed "s/initramfs-//g; s/.img//g"` --force;done
Executing: /usr/bin/dracut -v initramfs-3.10.0-862.2.3.el7.x86_64.img 3.10.0-862.2.3.el7.x86_64 --force
dracut module 'busybox' will not be installed, because command 'busybox' could not be found!
dracut module 'crypt' will not be installed, because command 'cryptsetup' could not be found!
dracut module 'dmraid' will not be installed, because command 'dmraid' could not be found!
dracut module 'dmsquash-live-ntfs' will not be installed, because command 'ntfs-3g' could not be found!
dracut module 'multipath' will not be installed, because command 'multipath' could not be found!
dracut module 'busybox' will not be installed, because command 'busybox' could not be found!
dracut module 'crypt' will not be installed, because command 'cryptsetup' could not be found!
dracut module 'dmraid' will not be installed, because command 'dmraid' could not be found!
dracut module 'dmsquash-live-ntfs' will not be installed, because command 'ntfs-3g' could not be found!
dracut module 'multipath' will not be installed, because command 'multipath' could not be found!
*** Including module: bash ***
*** Including module: nss-softokn ***
*** Including module: i18n ***
*** Including module: drm ***
*** Including module: plymouth ***
*** Including module: dm ***
Skipping udev rule: 64-device-mapper.rules
Skipping udev rule: 60-persistent-storage-dm.rules
Skipping udev rule: 55-dm.rules
*** Including module: kernel-modules ***
Omitting driver floppy
*** Including module: lvm ***
Skipping udev rule: 64-device-mapper.rules
Skipping udev rule: 56-lvm.rules
Skipping udev rule: 60-persistent-storage-lvm.rules
*** Including module: qemu ***
*** Including module: resume ***
*** Including module: rootfs-block ***
*** Including module: terminfo ***
*** Including module: udev-rules ***
Skipping udev rule: 40-redhat-cpu-hotplug.rules
Skipping udev rule: 91-permissions.rules
*** Including module: biosdevname ***
*** Including module: systemd ***
*** Including module: usrmount ***
*** Including module: base ***
*** Including module: fs-lib ***
*** Including module: shutdown ***
*** Including modules done ***
*** Installing kernel module dependencies and firmware ***
*** Installing kernel module dependencies and firmware done ***
*** Resolving executable dependencies ***
*** Resolving executable dependencies done***
*** Hardlinking files ***
*** Hardlinking files done ***
*** Stripping files ***
*** Stripping files done ***
*** Generating early-microcode cpio image contents ***
*** No early-microcode cpio image needed ***
*** Store current command line parameters ***
*** Creating image file ***
*** Creating image file done ***
*** Creating initramfs image file '/boot/initramfs-3.10.0-862.2.3.el7.x86_64.img' done ***

правим /boot/grub2/grub.cfg
vi /etc/fstab

Выходим, перезагружаемся
exit
reboot

После загрузки смотрим диски:
[vagrant@lvm ~]$ lsblk
NAME                    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda                       8:0    0   40G  0 disk 
├─sda1                    8:1    0    1M  0 part 
├─sda2                    8:2    0    1G  0 part /boot
└─sda3                    8:3    0   39G  0 part 
  ├─VolGroup00-LogVol00 253:0    0    8G  0 lvm  /
  └─VolGroup00-LogVol01 253:1    0  1.5G  0 lvm  [SWAP]
sdb                       8:16   0   10G  0 disk 
└─root1-root1_lv        253:2    0   10G  0 lvm  
sdc                       8:32   0    2G  0 disk 
sdd                       8:48   0    1G  0 disk 
sde                       8:64   0    1G  0 disk 

Удаляем временный раздел
[root@lvm vagrant]# lvremove -f /dev/root1/root1_lv 
  Logical volume "root1_lv" successfully removed
[root@lvm vagrant]# vgremove root1
  Volume group "root1" successfully removed
[root@lvm vagrant]# pvremove /dev/sdb
  Labels on physical volume "/dev/sdb" successfully wiped.

Создаем логические разделы для home и var
[root@lvm vagrant]# lvcreate -L 1G -n home VolGroup00 
  Logical volume "home" created.
[root@lvm vagrant]# lvcreate -L 1G -m1 --alloc anywhere -n var VolGroup00
  Logical volume "var" created.

Создаем файловую систему
[root@lvm vagrant]# mkfs.xfs -q /dev/VolGroup00/home
[root@lvm vagrant]# mkfs.xfs -q /dev/VolGroup00/var

Монтируем home (временно)
[root@lvm vagrant]# mount /dev/VolGroup00/home /mnt
Переносим данные и монтируем на место
[root@lvm vagrant]# cp -aR /home/* /mnt/
[root@lvm vagrant]# rm -rf /home/*
[root@lvm vagrant]# umount /mnt
[root@lvm vagrant]# mount /dev/VolGroup00/home /home

Добавляем точку монтирования /home в fstab
echo "`blkid | grep home | awk '{print $2}'` /home xfs defaults 0 0" >> /etc/fstab

Монтируем var (временно) и копируем данные из /var
mount /dev/VolGroup00/var /mnt
cp -aR /var/* /mnt
Перемонтируем var
umount -f /mnt && mount -U `blkid -s UUID -o value /dev/VolGroup00/var` /var

Добавляем точку монтирования /var в fstab
echo "`blkid -s UUID -o value /dev/VolGroup00/var` /var xfs defaults 0 0" >> /etc/fstab

Перезагружаемся, проверяем

Создаем 10 файлов по 1Мб
for i in {1..10}; do dd if=/dev/zero of=/home/vagrant/$i bs=1M count=1;done
[vagrant@lvm ~]$ ls /home/vagrant/
1  10  2  3  4  5  6  7  8  9
Создаем снапшот
[vagrant@lvm ~]$ sudo lvcreate --size 1G --snapshot --name home_snap /dev/VolGroup00/home
  Logical volume "home_snap" created.
Удалим часть файлов
[vagrant@lvm ~]$ rm 1 4 7
[vagrant@lvm ~]$ ls
10  2  3  5  6  8  9
cd /
sudo umount /home
[vagrant@lvm /]$ sudo lvconvert --merge /dev/VolGroup00/home_snap 
  Merging of volume VolGroup00/home_snap started.
  VolGroup00/home: Merged: 100.00%

[vagrant@lvm /]$ 
[vagrant@lvm /]$ sudo mount /home
[vagrant@lvm /]$ ls /home/vagrant/
1  10  2  3  4  5  6  7  8  9



btrfs
Создаем файловую систему btrfs на двух дисках по 1Гб
[vagrant@lvm /]$ sudo mkfs.btrfs -q /dev/sdd /dev/sde
Создаем каталоги для монтирования
[vagrant@lvm /]$ sudo mkdir /btrfs /opt_btrfs
Монтируем файловую систему 
[vagrant@lvm /]$ sudo mount /dev/sdd /btrfs
Создаем сабволюм
[vagrant@lvm /]$ sudo btrfs subvolume create /btrfs/opt
Create subvolume '/btrfs/opt'
[vagrant@lvm /]$ sudo mount -t btrfs -o subvol=opt,defaults /dev/disk/by-uuid/`sudo blkid -s UUID -o value /dev/sde` /opt_btrfs
[vagrant@lvm /]$ sudo umount /btrfs
[vagrant@lvm /]$ df -h
Filesystem                       Size  Used Avail Use% Mounted on
/dev/mapper/VolGroup00-LogVol00  8.0G  770M  7.3G  10% /
devtmpfs                         110M     0  110M   0% /dev
tmpfs                            118M     0  118M   0% /dev/shm
tmpfs                            118M  4.6M  114M   4% /run
tmpfs                            118M     0  118M   0% /sys/fs/cgroup
/dev/sda2                       1014M   61M  954M   6% /boot
/dev/mapper/VolGroup00-var      1014M  175M  840M  18% /var
tmpfs                             24M     0   24M   0% /run/user/1000
/dev/mapper/VolGroup00-home     1014M   43M  972M   5% /home
/dev/sdd                         2.0G   17M  1.8G   1% /opt_btrfs

Сгенерируем файлы в /opt_btrfs
[vagrant@lvm /]$ for i in {1..10}; do sudo dd if=/dev/zero of=/opt_btrfs/$i bs=1M count=1;done
1+0 records in
1+0 records out
1048576 bytes (1.0 MB) copied, 0.00132462 s, 792 MB/s
1+0 records in
1+0 records out
1048576 bytes (1.0 MB) copied, 0.00120045 s, 873 MB/s
1+0 records in
1+0 records out
1048576 bytes (1.0 MB) copied, 0.00117613 s, 892 MB/s
1+0 records in
1+0 records out
1048576 bytes (1.0 MB) copied, 0.00137687 s, 762 MB/s
1+0 records in
1+0 records out
1048576 bytes (1.0 MB) copied, 0.00119933 s, 874 MB/s
1+0 records in
1+0 records out
1048576 bytes (1.0 MB) copied, 0.00117109 s, 895 MB/s
1+0 records in
1+0 records out
1048576 bytes (1.0 MB) copied, 0.00163427 s, 642 MB/s
1+0 records in
1+0 records out
1048576 bytes (1.0 MB) copied, 0.00121755 s, 861 MB/s
1+0 records in
1+0 records out
1048576 bytes (1.0 MB) copied, 0.00153764 s, 682 MB/s
1+0 records in
1+0 records out
1048576 bytes (1.0 MB) copied, 0.00118095 s, 888 MB/s
[vagrant@lvm /]$ ls /opt
opt/       opt_btrfs/ 
[vagrant@lvm /]$ ls /opt_btrfs/
1  10  2  3  4  5  6  7  8  9

Создаем снапшот
[vagrant@lvm /]$ sudo btrfs subvolume snapshot /opt_btrfs/ /opt_btrfs/snapshot
Create a snapshot of '/opt_btrfs/' in '/opt_btrfs/snapshot'

Удалим часть файлов
[vagrant@lvm /]$ ls /opt_btrfs/
1  10  3  4  6  8  9  snapshot
Восстанавливаем файлы из снапшота
[vagrant@lvm /]$ sudo mv /opt_btrfs/snapshot/* /opt_btrfs/
Удаляем снапшот и проверяем файлы
[vagrant@lvm /]$ sudo btrfs subvolume delete /opt_btrfs/snapshot
Delete subvolume (no-commit): '/opt_btrfs/snapshot'
[vagrant@lvm /]$ ls /opt_btrfs/
1  10  2  3  4  5  6  7  8  9
[vagrant@lvm /]$ 

